<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $filename
 * @property text $description
 * @property bigint $category_id
 * @property CategoryPhoto $CategoryPhoto
 * 
 * @method string        getFilename()      Returns the current record's "filename" value
 * @method text          getDescription()   Returns the current record's "description" value
 * @method bigint        getCategoryId()    Returns the current record's "category_id" value
 * @method CategoryPhoto getCategoryPhoto() Returns the current record's "CategoryPhoto" value
 * @method Photo         setFilename()      Sets the current record's "filename" value
 * @method Photo         setDescription()   Sets the current record's "description" value
 * @method Photo         setCategoryId()    Sets the current record's "category_id" value
 * @method Photo         setCategoryPhoto() Sets the current record's "CategoryPhoto" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo');
        $this->hasColumn('filename', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('category_id', 'bigint', null, array(
             'type' => 'bigint',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CategoryPhoto', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'description',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($i18n0);
        $this->actAs($timestampable0);
    }
}